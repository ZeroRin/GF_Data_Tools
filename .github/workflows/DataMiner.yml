name: gfl-data-miner auto update bot

on:
  workflow_dispatch:
    inputs:
      cmdargs:
        description: 'Commandline Arguments'     
        required: false
        default: 'tw kr jp us ch' 
        type: string
  schedule:
    - cron: '0 0/3 * * *'
    - cron: '30 1-13 * * 4'
  push:
    paths:
      - 'data-miner'
    

jobs:
  gfl-data-miner-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          submodules: 'recursive'
      - name: git
        run: |
          echo "::group::Git Config"
          git config --global user.name "AutoUpdate"
          git config --global user.email "<>"
          git config --global core.autocrlf input
          git submodule foreach --recursive git checkout main
          echo "::endgroup::"

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD HH:mm:ss
          utcOffset: "+08:00"

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.8'
          
      - name: Install Data-Miner Dependencies
        uses: py-actions/py-dependency-install@v3
        with:
          path: "data-miner/requirements.txt"
      - name: Data Miner
        id: data-miner
        run: python data-miner/data_miner.py ${{ inputs.cmdargs || 'tw kr jp us ch at' }} ${{ github.event_name=='push' && '-f' || '' }}
        
      - name: Install Tool Dependencies
        uses: py-actions/py-dependency-install@v3
        with:
          path: "requirements.txt"
      - name: Postprocess on New Commit
        if: ${{ steps.data-miner.outputs.has-new-commits == 'true' }}
        run: |
          echo "::group::Enemy Team Analyze"
          python enemy_team_analyze/enemy_team_analyze.py
          python enemy_stats_analyze/main.py
          echo "::endgroup::"

          echo "::group::Resource Downloader"
          cd resource_downloader
          python pack_resdata.py
          git add .
          git diff-index --quiet HEAD || git commit -m "by DataMiner at ${{ steps.current-time.outputs.formattedTime }}"
          cd ..
          echo "::endgroup::"

          echo "::group::Anti Harmonization"
          python anti-harmonization/main.py
          cp anti-harmonization/catchdata.dat outputs/catchdata.dat
          echo "::endgroup::"

          echo "::group::Commit and Push"
          git add .
          git commit -m "by DataMiner at ${{ steps.current-time.outputs.formattedTime }}"
          git submodule foreach --recursive git push
          git push
          echo "::endgroup::"