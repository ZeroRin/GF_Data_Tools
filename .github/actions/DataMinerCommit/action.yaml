name: 'DataMinerCommit'
description: 'Commit dataminer outputs'

inputs:
  commit_message:
    description: Commit message
    required: true
  repository:
    description: Submodule path
    required: true
  bot_token:
    description: Dingtalk bot token
    required: false

runs:
  using: "composite"
  steps:
    - name: Commit-submodule
      id: commit-submodule
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: ${{ inputs.commit_message }}
        repository: ${{ inputs.repository }}
    - name: Commit-main
      uses: stefanzweifel/git-auto-commit-action@v4
      if: ${{ steps.commit-submodule.outputs.changes_detected=="true" }}
      with:
        commit_message: ${{ inputs.commit_message }}
        file_pattern: ${{ inputs.repository }}
        push_options: --dry-run 
    - name: Notify
      shell: bash
      if: ${{ inputs.bot_token && steps.commit-submodule.outputs.changes_detected=="true" }}
      run: |
        curl '${{ inputs.bot_token }}' \
        -H 'Content-Type: application/json' \
        -d '{"msgtype": "text","text": {"content":"[gf-data-tools] ${{ inputs.commit_message }}"}}'